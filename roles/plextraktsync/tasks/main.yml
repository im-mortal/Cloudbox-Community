#########################################################################
# Title:            Community: PlexTraktSync                                  #
# Author(s):        im-mortal                                             #
# URL:              https://github.com/Cloudbox/Community               #
# Docker Image(s):  ghcr.io/taxel/plextraktsync                                #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Setting CloudFlare DNS Record"
  include_role:
    name: cloudflare-dns
  vars:
    record: plextraktsync
  when: cloudflare_enabled

- name: Stop and remove any existing container
  docker_container:
    name: plextraktsync
    state: absent

- name: Create plextraktsync directories
  file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }}"
  with_items:
    - /opt/plextraktsync

- name: Create and start container
  docker_container:
    name: plextraktsync
    image: ghcr.io/taxel/plextraktsync
    pull: yes
    env:
      TZ: "{{ tz }}"
      PUID: "{{ uid }}"
      PGID: "{{ gid }}"
      PLEX_BASEURL: "{{ plextraktsync.plex_baseurl }}"
      PLEX_LOCALURL: "{{ plextraktsync.plex_localurl }}"
      PLEX_TOKEN: "{{ plextraktsync.plex_token }}"
      PLEX_USERNAME: "{{ plextraktsync.plex_username }}"
      TRAKT_USERNAME: "{{ plextraktsync.trakt_username }}"
    command: plextraktsync watch
    volumes:
      - "/opt/plextraktsync:/app/config"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - plextraktsync
    purge_networks: yes
    restart_policy: unless-stopped
    state: started

- name: Check if 'plextraktsync.service' exists
  stat:
    path: '/etc/systemd/system/plextraktsync.service'
  register: plextraktsync_service

- name: Import 'plextraktsync.service' file
  template:
    src: systemd/plextraktsync.service.j2
    dest: /etc/systemd/system/plextraktsync.service
    owner: '{{ user.name }}'
    group: '{{ user.name }}'
    mode: 0775
    force: yes
  when: not plextraktsync_service.stat.exists

- name: Check if 'plextraktsync.timer' exists
  stat:
    path: '/etc/systemd/system/plextraktsync.timer'
  register: plextraktsync_timer

- name: Import 'plextraktsync.timer' file
  template:
    src: systemd/plextraktsync.timer.j2
    dest: /etc/systemd/system/plextraktsync.timer
    owner: '{{ user.name }}'
    group: '{{ user.name }}'
    mode: 0775
    force: yes
  when: not plextraktsync_timer.stat.exists

- name: Start 'plextraktsync.timer'
  systemd:
    state: started
    name: plextraktsync.timer
    daemon_reload: yes
    enabled: yes

- name: Configure logrotate for plextraktsync
  blockinfile:
    path: /etc/logrotate.d/plextraktsync
    block: |
      /opt/plextraktsync/*.log {
        rotate 5
        compress
        missingok
        notifempty
        postrotate
          docker restart plextraktsync
        endscript
      }
    create: true
    owner: '{{ user.name }}'
    group: '{{ user.name }}'
    mode: 0775
